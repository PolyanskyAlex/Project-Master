---
description: 
globs: 
alwaysApply: false
---
{
  "context": "testing_rules",
  "description": "Правила и стандарты для проведения локального и автоматизированного тестирования.",
  
  "testingPhilosophy": {
    "shiftLeft": "Тестирование — это непрерывный процесс, начинающийся с самого начала разработки.",
    "automationFirst": "Предпочитать автоматизированные тесты ручным.",
    "pyramid": "Следовать пирамиде тестирования: много быстрых юнит-тестов, меньше интеграционных, и мало E2E-тестов."
  },

  "testTypes": {
    "unitTests": { "purpose": "Тестирование отдельных компонентов в изоляции.", "tools": ["Jest", "Pytest", "JUnit"] },
    "integrationTests": { "purpose": "Проверка взаимодействия между несколькими компонентами.", "tools": ["Supertest", "Testing Library"] },
    "endToEndTests": { "purpose": "Тестирование полного пользовательского сценария.", "tools": ["Cypress", "Playwright"] }
  },

  "testingWorkflow": {
    "description": "Процесс тестирования от локальной машины до CI/CD.",
    "steps": [
      {
        "name": "1. Локальное тестирование (в Cursor IDE)",
        "action": "Агент ОБЯЗАН запускать тесты и приложение локально после каждого изменения кода (`npm test`, `pytest`). Агент обязан включить в тесты ВСЕ функции текущего функционального блока и связанных с ним. Агент ОБЯЗАН Использовать рекомендации сервиса "Context7" который подключен к текущей Cursor IDE по MCP. Тесты должны быть полностью автономными и не требованть участия пользователя.",
        "goal": "Мгновенная обратная связь до коммита."
      },
      {
        "name": "2. Предкоммитные проверки (Pre-commit Hooks)",
        "action": "Перед `git commit` автоматически запускать линтеры и быстрые юнит-тесты, запуск приложения и проверка логов в терминале",
        "tools": ["`husky` и `lint-staged`."],
        "goal": "Предотвращение попадания некачественного кода в репозиторий."
      },
      {
        "name": "3. Автоматизированное тестирование в CI",
        "action": "При `git push` (особенно в Pull Request), CI-пайплайн (GitHub Actions) должен запускать ПОЛНЫЙ набор тестов.",
        "goal": "Гарантия того, что изменения не сломали основную кодовую базу."
      },
      {
        "name": "4. Завершение запущенных экземпляров приложения в терминале",
        "action": "Агент ОБЯЗАН найти все запущенные экземпляры инстансов приложения для тестирования в терминалах и завершить их. Не нужно останавливать Docker-контейнеры или аналогичные сервисы, не нужно останавливать сервер баз данных.",
        "goal": "Приложение остановлено",
        "next": {
        "conditions": [
          {
            "condition": "Агент перешел в процесс тестирования из процесса багфиксинга",
            "actions": "Продолжить процесс багфиксинга"
          }
        ],
        "default": "Завершение тестирования"
        }
      }
    ]
  },

  "qualityMetrics": {
    "codeCoverage": { "target": "Не менее 85% покрытия кода юнит-тестами." },
    "passRate": "Все тесты в CI пайплайне должны проходить успешно для слияния ветки.",
    "testNaming": "Названия тестов должны быть описательными (`should <do something> when <condition>`)."
  }

}