---
description: 
globs: 
alwaysApply: false
---
---
description: Пайплайн, управляющий полным циклом развертывания, включая автоматическую отладку сбоев CI/CD.
globs: []
alwaysApply: false
---
{
  "context": "hierarchical_deployment_pipeline",
  "description": "Пайплайн, управляющий полным циклом развертывания. Работает с задачами, назначенными на AI-DevOps-Agent, и включает автоматическую отладку сбоев CI/CD и самокоррекцию на основе четких правил.",
  "entry_point": "Инициализация и декомпозиция",
  "pipeline": [
    {
      "name": "Инициализация и декомпозиция",
      "description": "Начальный шаг. Определяет, является ли текущая задача родительской, и запускает соответствующий воркфлоу.",
      "task": "Проанализировать номер задачи {task_id}. Если номер имеет формат X.Y (например, 2.1), это родительская задача. Если X.Y.Z (например, 2.1.1), это подзадача.",
      "next": {
        "conditions": [
          {
            "condition": "Задача является родительской",
            "next_step": "Оркестрация выполнения подзадач деплоя"
          }
        ],
        "default": "Запуск CI/CD пайплайна"
      }
    },
    {
      "name": "Оркестрация выполнения подзадач деплоя",
      "description": "Управляет жизненным циклом родительской задачи. Выполняет ее подзадачи деплоя последовательно.",
      "task": [
        "Обновить статус родительской задачи {task_id} на 'В работе'.",
        "Найти все файлы подзадач для родительской задачи {task_id}, которые имеют статус 'Ожидание'.",
        "Собрать список всех выполненных задач (прочитав их статусы).",
        "Для каждой невыполненной подзадачи прочитать её поле 'dependencies'.",
        "Выбрать для выполнения ту подзадачу, у которой все зависимости из списка уже находятся в статусе 'Выполнена' (или у которой зависимостей нет).",
        "Если найдена готовая к выполнению подзадача, запустить для нее соответствующий воркфлоу.",
        "Если готовых к выполнению подзадач нет, но остались незавершенные, ожидать их выполнения.",
        "Если все подзадачи выполнены, перейти к шагу 'Завершение родительской задачи'."
       ]
    },
    {
      "name": "Запуск CI/CD пайплайна",
      "description": "Запуск воркфлоу GitHub Actions для сборки, тестирования и развертывания.",
      "task": [
        "Используй рекомендации сервиса "Context7" который подключен к текущей Cursor IDE по MCP.",
        "Сделать `commit` и `push` изменений, чтобы запустить триггер CI/CD.",
        "Определи ID запущенного воркфлоу.",
        "Начать мониторинг выполнения воркфлоу, используя правила из `.cursor/rules/deploy.mdc#githubActionsInteraction`."
      ],
      "next": "Валидация развертывания"
    },
    {
      "name": "Валидация развертывания",
      "description": "Проверка статуса воркфлоу и работоспособности развернутой системы.",
      "task": [
        "Проверить статус завершения воркфлоу GitHub Actions. Успешно ли он завершился?",
        "Если воркфлоу успешен, запустить smoke-тесты и проверить health-check эндпоинты развернутого приложения."
      ],
      "next": {
        "on_success": "Завершение подзадачи деплоя",
        "on_failure": "Стратегия отката (Rollback)"
      }
    },
    {
      "name": "Стратегия отката (Rollback)",
      "description": "Активация процедуры отката в случае сбоя развертывания.",
      "task": "Активируй процедуру отката, описанную в задаче или в CI/CD. Например, разверни предыдущий стабильный Docker-образ. Залогируй факт отката.",
      "next": "Анализ сбоя деплоя"
    },
    {
      "name": "Анализ сбоя деплоя",
      "description": "Систематическая отладка сбойного CI/CD пайплайна.",
      "task": [
        "Немедленно инициировать процедуру отладки, описанную в `.cursor/rules/deploy.mdc` в разделе `cicdDebuggingStrategy`.",
        "Последовательно выполнить все шаги из этой стратегии: от скачивания логов до изоляции проблемы и проверки предположений.",
        "По итогам анализа подготовить четкий план исправления, основанный на найденной коренной причине."
      ],
      "next": "Багфиксинг в деплое с Context7"
    },
    {
      "name": "Багфиксинг в деплое с Context7",
      "description": "Исправление ошибки, выявленной при анализе сбоя, с использованием проверенных данных.",
      "task": [
        "Если причина сбоя связана с API, библиотекой или конфигурацией, в первую очередь выполни запрос к Context7 для поиска проверенного решения.",
        "Основывай свое исправление (в коде, тестах или `.yml` файле) на полученных из Context7 данных.",
        "Строго следуй общим правилам исправления из `.cursor/rules/bugfixing.mdc`."
      ],
      "next": "Запуск CI/CD пайплайна"
    },
    {
      "name": "Завершение подзадачи деплоя",
      "description": "Финализация работы по конкретной единице работы.",
      "task": [
        "Обнови статус подзадачи на 'Выполнена' в ее файле.",
        "Обнови статус родительской задачи в файле `deploy_plan.md`.",
        "Сделай атомарный commit в git с детальным сообщением согласно правилам.",
        "Создай краткий отчет о проделанной работе и принятых решениях по этой подзадаче.",
        "Сигнализировать 'Оркестратору' о завершении, чтобы он мог запустить следующую подзадачу."
      ]
    },
    {
      "name": "Завершение родительской задачи",
      "description": "Финализация работы по родительской задаче деплоя.",
      "task": [
        "Обнови статус родительской задачи на 'Ожидание подтверждения'.",
        "Собери отчеты по всем подзадачам в один общий, структурированный отчет.",
        "Обнови `README.md` с инструкциями по развертыванию, если они изменились.",
        "Сделай комит в git с финальными изменениями документации.",
        "Представь финальный отчет пользователю и запроси формальное подтверждение."
      ]
    }
  ]
}