**>>>ЗАДАЧА<<< 1.3.0: Реализация базового HTTP-сервера и роутера**
*   **Статус:** Ожидание
*   **Зависимости:** 1.0.0
*   **Приоритет:** Высокий
*   **Ответственный:** AI-Backend-Agent
*   **Подробнейшее Описание:**
    *   **Логика работы:** В `main.go` инициализировать `chi.Router`. В `router/router.go` определить функцию `NewRouter` для настройки базовых маршрутов (например, `/health`). В `main.go` запустить HTTP-сервер, слушающий на порту из конфигурации.
    *   **Схемы/диаграммы:** См. 2.2. Логическая АрхиITECTURE (Router).
    *   **Примеры кода:**
        ```go
        // router/router.go
        package router
        import ( "net/http"; "github.com/go-chi/chi/v5" )
        func NewRouter() *chi.Mux {
            r := chi.NewRouter()
            r.Get("/health", func(w http.ResponseWriter, r *http.Request) { w.Write([]byte("OK")) })
            return r
        }

        // main.go
        package main
        import ( "net/http"; "log"; "your_module_name/config"; "your_module_name/router"; "your_module_name/database" )
        func main() {
            cfg := config.LoadConfig()
            database.ConnectDB(cfg.DatabaseURL)
            database.RunMigrations(cfg.DatabaseURL, "./database/migrations") // Путь к миграциям
            r := router.NewRouter()
            log.Printf("Server starting on port %s\n", cfg.ServerPort)
            log.Fatal(http.ListenAndServe(":"+cfg.ServerPort, r))
        }
        ```
    *   **Цель задачи:** Создать работающий HTTP-сервер, способный принимать запросы.
    *   **Входные данные:** `PORT` в `.env`.
    *   **Выходные данные/Ожидаемый результат:** Сервер запускается, эндпоинт `/health` возвращает "OK".
*   **Критерии Приемки:**
    *   Сервер успешно запускается без ошибок.
    *   HTTP-запрос к `http://localhost:8080/health` возвращает статус 200 и тело "OK".
*   **Технические Детали/Инструкции:**
    *   Использовать `chi.NewRouter()`.
    *   Использовать `http.ListenAndServe()`.
*   **Связанные Артефакты:** 2.7. API и Протоколы Взаимодействия.
*   **<<<Окончание задачи>>> 1.3.0** 