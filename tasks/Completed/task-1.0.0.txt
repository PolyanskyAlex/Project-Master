**>>>ЗАДАЧА<<< 1.0.0: Инициализация Go-проекта и базовой структуры**
*   **Статус:** Ожидание
*   **Зависимости:** Нет
*   **Приоритет:** Высокий
*   **Ответственный:** AI-Backend-Agent
*   **Подробнейшее Описание:**
    *   **Логика работы:** Создать новый Go-модуль. Инициализировать базовую структуру каталогов (`config`, `database`, `models`, `repositories`, `services`, `handlers`, `router`, `utils`). Создать `main.go` как точку входа.
    *   **Схемы/диаграммы:**
        ```
        project-manager/
        ├── main.go
        ├── go.mod
        ├── go.sum
        ├── config/
        ├── database/
        ├── models/
        ├── repositories/
        ├── services/
        ├── handlers/
        ├── router/
        └── utils/
        ```
    *   **Примеры кода:**
        ```go
        // main.go
        package main
        import "fmt"
        func main() { fmt.Println("Project Manager Backend") }
        ```
    *   **Цель задачи:** Подготовить базовую структуру проекта для дальнейшей разработки.
    *   **Входные данные:** Отсутствуют.
    *   **Выходные данные/Ожидаемый результат:** Созданный Go-модуль и пустая структура каталогов.
*   **Критерии Приемки:**
    *   `go.mod` файл существует.
    *   Все указанные каталоги созданы.
    *   `main.go` компилируется и запускается без ошибок.
*   **Технические Детали/Инструкции:**
    *   Использовать `go mod init <your_module_name>`.
    *   Создать каталоги с помощью `mkdir`.
*   **Связанные Артефакты:** 2.2. Логическая Архитектура (Структура каталогов).
*   **<<<Окончание задачи>>> 1.0.0** 