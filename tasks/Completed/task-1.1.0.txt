**>>>ЗАДАЧА<<< 1.1.0: Настройка Docker Compose для PostgreSQL**
*   **Статус:** Ожидание
*   **Зависимости:** Нет
*   **Приоритет:** Высокий
*   **Ответственный:** AI-DevOps-Agent
*   **Подробнейшее Описание:**
    *   **Логика работы:** Создать `docker-compose.yml` для запуска контейнера PostgreSQL. Определить сервис `db`, использовать образ `postgres:15-alpine`. Настроить переменные окружения для имени БД, пользователя и пароля. Пробросить порт 5432. Создать Docker Volume для персистентного хранения данных.
    *   **Схемы/диаграммы:** См. 2.3. Физическая/Развертываемая Архитектура.
    *   **Примеры кода:**
        ```yaml
        # docker-compose.yml
        version: '3.8'
        services:
          db:
            image: postgres:15-alpine
            restart: always
            environment:
              POSTGRES_DB: project_manager_db
              POSTGRES_USER: user
              POSTGRES_PASSWORD: password
            ports:
              - "5432:5432"
            volumes:
              - db_data:/var/lib/postgresql/data
        volumes:
          db_data:
        ```
    *   **Цель задачи:** Обеспечить локальный запуск PostgreSQL для разработки.
    *   **Входные данные:** Отсутствуют.
    *   **Выходные данные/Ожидаемый результат:** Контейнер PostgreSQL успешно запускается и доступен на порту 5432.
*   **Критерии Приемки:**
    *   `docker-compose.yml` создан.
    *   Команда `docker-compose up -d db` успешно запускает контейнер `db`.
    *   Можно подключиться к БД с помощью `psql` или другого клиента.
*   **Технические Детали/Инструкции:**
    *   Использовать `docker-compose up -d`.
    *   Проверить статус контейнера `docker-compose ps`.
*   **Связанные Артефакты:** 2.3. Физическая/Развертываемая Архитектура.
*   **<<<Окончание задачи>>> 1.1.0** 